{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/overlay-model/overlay-model.component.css","webpack:///./src/app/overlay-model/overlay-model.component.html","webpack:///./src/app/overlay-model/overlay-model.component.ts","webpack:///./src/app/user-data-row/user-data-row.component.css","webpack:///./src/app/user-data-row/user-data-row.component.html","webpack:///./src/app/user-data-row/user-data-row.component.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/app/user.model.ts","webpack:///./src/app/users-list/users-list.component.css","webpack:///./src/app/users-list/users-list.component.html","webpack:///./src/app/users-list/users-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".modal {\\r\\n    display: block; /* Hidden by default */\\r\\n    position: fixed; /* Stay in place */\\r\\n    z-index: 1; /* Sit on top */\\r\\n    padding-top: 100px; /* Location of the box */\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%; /* Full width */\\r\\n    height: 100%; /* Full height */\\r\\n    overflow: auto; /* Enable scroll if needed */\\r\\n    background-color: rgb(0,0,0); /* Fallback color */\\r\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n    background-color: #fefefe;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #888;\\r\\n    width: 20%;\\r\\n}\"","module.exports = \"\\r\\n<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'NgMvcCRUD';\r\n\r\n    isUserList: boolean;\r\n\r\n    constructor() {\r\n        this.isUserList = true;\r\n    }\r\n\r\n    \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RouterModule, Routes, ActivatedRoute } from '@angular/router';\r\nimport { UserDataRowComponent } from './user-data-row/user-data-row.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { OverlayModelComponent } from './overlay-model/overlay-model.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'userList', pathMatch: 'full' },\r\n    { path: 'userList', component: UsersListComponent },\r\n    { path: 'userForm', component: UserFormComponent },\r\n    { path: 'userForm/:id', component: UserFormComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavbarComponent,\r\n        UserDataRowComponent,\r\n        UsersListComponent,\r\n        UserFormComponent,\r\n        OverlayModelComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpModule,\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    providers: [\r\n        { provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<!-- Navigation -->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Ng MVC CRUD Demo</a>\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\r\\n            <!--<ul class=\\\"navbar-nav ml-auto\\\">\\r\\n                <li class=\\\"nav-item active\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">\\r\\n                        Home\\r\\n                        <span class=\\\"sr-only\\\">(current)</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">Services</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\">Contact</a>\\r\\n                </li>\\r\\n            </ul>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".modal {\\r\\n    display: block; /* Hidden by default */\\r\\n    position: fixed; /* Stay in place */\\r\\n    z-index: 1; /* Sit on top */\\r\\n    padding-top: 100px; /* Location of the box */\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%; /* Full width */\\r\\n    height: 100%; /* Full height */\\r\\n    overflow: auto; /* Enable scroll if needed */\\r\\n    background-color: rgb(0,0,0); /* Fallback color */\\r\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n    background-color: #fefefe;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #888;\\r\\n    width: 20%;\\r\\n}\"","module.exports = \"<div id=\\\"myModal\\\" class=\\\"modal\\\">\\r\\n\\r\\n    <!-- Modal content -->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n        <img src=\\\"/contents/Images/Loading-gif.gif\\\" width=\\\"30\\\" height=\\\"30\\\" style=\\\"float: left;\\\" />\\r\\n        <h5 style=\\\"float:right;\\\">Getting user data...</h5>\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-overlay-model',\r\n  templateUrl: './overlay-model.component.html',\r\n  styleUrls: ['./overlay-model.component.css']\r\n})\r\nexport class OverlayModelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<tr>\\r\\n    <td>{{user.userId}}</td>\\r\\n    <td>{{user.userName}}</td>\\r\\n    <td>{{user.address}}</td>\\r\\n    <td>{{user.contactNo}}</td>\\r\\n    <td>{{user.email}}</td>\\r\\n</tr>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from '../user.model';\r\n\r\n@Component({\r\n    selector: 'app-user-data-row',\r\n    templateUrl: './user-data-row.component.html',\r\n    styleUrls: ['./user-data-row.component.css']\r\n})\r\nexport class UserDataRowComponent implements OnInit {\r\n\r\n    @Input() user: any;\r\n\r\n    constructor() { }\r\n\r\n    \r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"padding: 20px;\\\">\\r\\n\\r\\n    \\r\\n    <span class=\\\"alert alert-danger\\\" *ngIf = \\\"isError\\\">{{error}}</span>\\r\\n\\r\\n    <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"addNewUser(myForm)\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n        <input type=\\\"hidden\\\" [formControl]=\\\"myForm.get('Id')\\\" id=\\\"Id\\\" name=\\\"Id\\\"/>\\r\\n\\r\\n        <div calss=\\\"form-group\\\" *ngIf =\\\"isAdd\\\">\\r\\n            <label for=\\\"productName\\\">User Id:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"userId\\\" class=\\\"form-control\\\" name=\\\"userId\\\" placeholder=\\\"User Id\\\"\\r\\n                   [formControl]=\\\"myForm.get('UserId')\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div calss=\\\"form-group\\\" *ngIf=\\\"!isAdd\\\">\\r\\n            <label for=\\\"productName\\\">User Id:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"userId\\\" class=\\\"form-control\\\" name=\\\"userId\\\" placeholder=\\\"User Id\\\"\\r\\n                   [formControl]=\\\"myForm.get('UserId')\\\" readonly =\\\"readonly\\\" />\\r\\n        </div><br />\\r\\n\\r\\n        <div calss=\\\"form-group\\\">\\r\\n            <label for=\\\"productName\\\">User Name:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"userName\\\" class=\\\"form-control\\\" name=\\\"userName\\\" placeholder=\\\"User Name\\\"\\r\\n                   [formControl]=\\\"myForm.get('UserName')\\\" />\\r\\n        </div><br />\\r\\n\\r\\n        <div calss=\\\"form-group\\\">\\r\\n            <label for=\\\"productName\\\">Address:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" name=\\\"address\\\" placeholder=\\\"Address\\\"\\r\\n                   [formControl]=\\\"myForm.get('Address')\\\" />\\r\\n        </div><br />\\r\\n\\r\\n        <div calss=\\\"form-group\\\">\\r\\n            <label for=\\\"productName\\\">Contact Number:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"contactNo\\\" class=\\\"form-control\\\" name=\\\"contactNo\\\" placeholder=\\\"Contact Number\\\"\\r\\n                   [formControl]=\\\"myForm.get('ContactNo')\\\" />\\r\\n        </div><br />\\r\\n\\r\\n        <div calss=\\\"form-group\\\">\\r\\n            <label for=\\\"productName\\\">Email Id:</label>\\r\\n            <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email Id\\\"\\r\\n                   [formControl]=\\\"myForm.get('EmailId')\\\" />\\r\\n        </div><br />\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>&nbsp;&nbsp;&nbsp;\\r\\n            <a href=\\\"\\\" class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/userList']\\\">Cancel</a>\\r\\n        </div><br />\\r\\n\\r\\n    </form>\\r\\n\\r\\n    \\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { User } from '../user.model';\r\nimport { Router, ActivatedRoute } from '@angular/router'; \r\n\r\n@Component({\r\n  selector: 'app-user-form',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.css']\r\n})\r\nexport class UserFormComponent implements OnInit {\r\n\r\n    myForm: FormGroup;\r\n    userData: object;\r\n    error: string;\r\n    isError: boolean;\r\n    isAdd: boolean;\r\n\r\n    constructor(fb: FormBuilder, private http: Http, private router: Router, private _ActivatedRoute: ActivatedRoute) {\r\n\r\n        if (this._ActivatedRoute.snapshot.params['id'] != null) {\r\n            this.isAdd = false;\r\n\r\n            //alert(\"Edit Data of User Id: \" + this._ActivatedRoute.snapshot.params['id']);\r\n\r\n            let headers = new Headers({ 'Content-Type': 'application/json' });\r\n            let options = new RequestOptions({ headers: headers });\r\n            let data = { UserId: this._ActivatedRoute.snapshot.params['id'] };\r\n\r\n            //alert(\"User Id: \" + this._ActivatedRoute.snapshot.params['id']);\r\n\r\n            let user = new User();\r\n            user.UserId = this._ActivatedRoute.snapshot.params['id'];\r\n\r\n            this.http.post('/api/Users/GetUser', user, options)\r\n                .subscribe((response: Response) => {\r\n                    this.userData = response.json();\r\n\r\n                    this.myForm = fb.group({\r\n                        'Id': [this.userData['Id']],\r\n                        'UserId': [this.userData['UserId'], Validators.required],\r\n                        'UserName': [this.userData['UserName'], Validators.required],\r\n                        'Address': [this.userData['Address'], Validators.required],\r\n                        'ContactNo': [this.userData['ContactNo'], Validators.required],\r\n                        'EmailId': [this.userData['EmailId'], Validators.required]\r\n                    });                    \r\n                });            \r\n        }\r\n        else {\r\n            this.isAdd = true;\r\n\r\n            //alert(\"add new user\");\r\n\r\n            this.myForm = fb.group({\r\n                'Id': [''],\r\n                'UserId': ['', Validators.required],\r\n                'UserName': ['', Validators.required],\r\n                'Address': ['', Validators.required],\r\n                'ContactNo': ['', Validators.required],\r\n                'EmailId': ['', Validators.required]\r\n            });\r\n        }\r\n\r\n        this.myForm = fb.group({\r\n            'Id': [''],\r\n            'UserId': ['', Validators.required],\r\n            'UserName': ['', Validators.required],\r\n            'Address': ['', Validators.required],\r\n            'ContactNo': ['', Validators.required],\r\n            'EmailId': ['', Validators.required]\r\n        });\r\n\r\n        this.isError = false;\r\n        this.error = '';\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    addNewUser(values: FormGroup) {\r\n        if (values.controls['UserId'].valid && values.controls['UserName'].valid && values.controls['Address'].valid &&\r\n            values.controls['ContactNo'].valid && values.controls['EmailId'].valid) {\r\n            //alert('User Name: ' + values.controls['UserId'].value);\r\n            let user = new User();\r\n            user.Id = values.controls['Id'].value;\r\n            user.UserId = values.controls['UserId'].value;\r\n            user.UserName = values.controls['UserName'].value;\r\n            user.Address = values.controls['Address'].value;\r\n            user.ContactNo = values.controls['ContactNo'].value;\r\n            user.EmailId = values.controls['EmailId'].value;\r\n\r\n            let headers = new Headers({ 'Content-Type': 'application/json' });\r\n            let options = new RequestOptions({ headers: headers });\r\n\r\n            if (this.isAdd) { //Add User\r\n                this.http.post('/api/Users/AddUser', user, options).subscribe((response: Response) => {                    \r\n                    if (response.status == 200) {\r\n                        this.router.navigate(['/userList']);\r\n                    }\r\n                    else {\r\n                        this.isError = true;\r\n                        this.error = \"Unable to add user\";\r\n                    }\r\n                });\r\n            }\r\n            else {//Edit user\r\n                this.http.post('/api/Users/EditUser', user, options).subscribe((response: Response) => {\r\n                    \r\n                    if (response.status == 200) {\r\n                        this.router.navigate(['/userList']);\r\n                    }\r\n                    else {\r\n                        alert(\"Unable to edit user\");\r\n                        //this.isError = true;\r\n                        //this.error = \"Unable to edit user\";\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            alert('Please enter valid data.');\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n","export class User {\r\n    Id: number;\r\n    UserId: string;\r\n    UserName: string;\r\n    Address: string;\r\n    ContactNo: number;\r\n    EmailId: string;\r\n}\r\n","module.exports = \".modal {\\r\\n    display: block; /* Hidden by default */\\r\\n    position: fixed; /* Stay in place */\\r\\n    z-index: 1; /* Sit on top */\\r\\n    padding-top: 100px; /* Location of the box */\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%; /* Full width */\\r\\n    height: 100%; /* Full height */\\r\\n    overflow: auto; /* Enable scroll if needed */\\r\\n    background-color: rgb(0,0,0); /* Fallback color */\\r\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n    background-color: #fefefe;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #888;\\r\\n    width: 20%;\\r\\n}\"","module.exports = \"<div style=\\\"padding: 20px;\\\">\\r\\n    <a href=\\\"\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/userForm']\\\">New User</a><br /><br />\\r\\n\\r\\n    <table class=\\\"table table-striped\\\" *ngIf=\\\"usersList != null\\\">\\r\\n        <tr>\\r\\n            <th>User Id</th>\\r\\n            <th>User Name</th>\\r\\n            <th>Address</th>\\r\\n            <th>Contact No</th>\\r\\n            <th>Email</th>\\r\\n            <th>Actions</th>\\r\\n        </tr>\\r\\n        <!--<app-user-data-row *ngFor =\\\"let user of usersList\\\" [user] = \\\"user\\\"></app-user-data-row>-->\\r\\n\\r\\n        <tr *ngFor=\\\"let user of usersList\\\">\\r\\n            <td>{{user.UserId}}</td>\\r\\n            <td>{{user.UserName}}</td>\\r\\n            <td>{{user.Address}}</td>\\r\\n            <td>{{user.ContactNo}}</td>\\r\\n            <td>{{user.EmailId}}</td>\\r\\n            <td colspan=\\\"2\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"text text-success\\\" [routerLink]=\\\"['/userForm', user.UserId]\\\">Edit</a>&nbsp;&nbsp;\\r\\n                <a href=\\\"#\\\" class=\\\"text text-danger\\\" (click)=\\\"deleteUser($event, user.UserId, user.UserName)\\\">Delete</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"myModal\\\" class=\\\"modal\\\" *ngIf=\\\"showLoader\\\" >\\r\\n    <!-- Modal content -->\\r\\n    <div class=\\\"modal-content\\\">                \\r\\n        <img src=\\\"/contents/Images/Loading-gif.gif\\\" width=\\\"30\\\" height=\\\"30\\\" style=\\\"display: block; margin:auto;\\\" /><br/>\\r\\n        <h5 align=\\\"center\\\">Getting user data...</h5>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { User } from '../user.model';\r\nimport { Router, ActivatedRoute } from '@angular/router'; \r\n\r\n\r\n@Component({\r\n    selector: 'app-users-list',\r\n    templateUrl: './users-list.component.html',\r\n    styleUrls: ['./users-list.component.css']\r\n})\r\nexport class UsersListComponent implements OnInit {\r\n\r\n    usersList: object;\r\n    showLoader: boolean;\r\n    \r\n    constructor(private http: Http, private router: Router) {\r\n\r\n        this.loadUsersData();\r\n        \r\n        //this.usersList = [\r\n        //    { UserId: \"1\", UserName: \"abc\", Address: \"baroda\", ContactNo: 344738, EmailId: \"abc@gmail.com\" },\r\n        //    { UserId: \"2\", UserName: \"def\", Address: \"anand\", ContactNo: 342378, EmailId: \"def@gmail.com\" },\r\n        //    { UserId: \"3\", UserName: \"ghi\", Address: \"surat\", ContactNo: 298473, EmailId: \"ghi@gmail.com\" },\r\n        //    { UserId: \"4\", UserName: \"jkl\", Address: \"rajkot\", ContactNo: 985849, EmailId: \"jkl@gmail.com\" }\r\n       //];\r\n    }\r\n\r\n    deleteUser(event, userId, userName) {\r\n\r\n        if (confirm(\"Are you sure to delete data of user \\'\" + userId + \", \" + userName + \"\\'?\"))\r\n        {\r\n            let user = new User();\r\n            user.UserId = userId;\r\n\r\n            let headers = new Headers({ 'Content-Type': 'application/json' });\r\n            let options = new RequestOptions({ headers: headers });\r\n\r\n            this.http.post('/api/Users/DeleteUser', user, options).subscribe((response: Response) => {\r\n                \r\n                if (response.status == 200) { \r\n                    this.loadUsersData();\r\n                }\r\n                else {\r\n                    alert(\"Unable to delete data of \\'\" + userName + \"\\'.\");\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    loadUsersData()\r\n    {\r\n        this.showLoader = true;\r\n        this.http.request('/api/Users/GetUsers')\r\n            .subscribe((response: Response) => {\r\n                this.usersList = response.json();\r\n                this.showLoader = false;\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}